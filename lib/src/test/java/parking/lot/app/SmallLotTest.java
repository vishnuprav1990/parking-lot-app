/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package parking.lot.app;

import org.junit.Test;

import com.parkinglot.object.Lot;
import com.parkinglot.object.Lot.LotBuilder;
import com.parkinglot.object.LotType;
import com.parkinglot.object.Receipt;
import com.parkinglot.object.Ticket;
import com.parkinglot.object.Util;
import com.parkinglot.object.VehicleType;

import static org.junit.Assert.*;

import org.junit.Before;

public class SmallLotTest {


  private Lot lot;

  @Before
  public void setUp() {
    this.lot = new LotBuilder().setLotSizeByVechile(VehicleType.TWO_WHEELER, 2)
        .setLotType(LotType.MALL).build();
  }

  @Test
  public void shouldParkAndGetSpotNumber() {
    Ticket ticket = lot.park("motorcycle");
    assertEquals(1, ticket.getSpotNumber());
  }

  @Test
  public void shouldParkAndGetIcncrementedSpotNumber() {
    lot.park("motorcycle");
    Ticket ticket2 = lot.park("scooter");
    assertEquals(2, ticket2.getSpotNumber());
  }

  @Test
  public void shouldNotCreateTicketWhenNoSpaceAvailable() {
    lot.park("motorcycle");
    lot.park("scooter");
    Ticket ticket = lot.park("scooter");
    assertEquals(null, ticket);
  }

  @Test
  public void shouldNotCreateTicketOnIncorrectVechileName() {
    lot.park("motorcycle");
    lot.park("scooter");
    Ticket ticket = lot.park("xyz");
    assertEquals(null, ticket);
  }

  @Test
  public void shouldUnparkAndGenerateReceipt() {
    Ticket ticket = lot.park("scooter");
    Receipt receipt =
        lot.unPark(ticket, Util.addHoursToJavaUtilDate(ticket.getEntryDateTime(), 56));
    assertNotEquals(null, receipt);
  }

  @Test
  public void shouldUnparkAndGenerateReceiptWithCorrectFee() {
    Ticket ticket = lot.park("scooter");
    Receipt receipt =
        lot.unPark(ticket, Util.addHoursToJavaUtilDate(ticket.getEntryDateTime(), 220));
    assertEquals(40, receipt.getFees());
  }


}
